@model YourBlog.Models.ViewModel.NewsViewModel
@{
    ViewData["Title"] = "Add News Article";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>
    <form asp-action="AddNews" method="post">
        <div class="form-group">
            <label asp-for="Title"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Content"></label>
            <textarea asp-for="Content" class="form-control" rows="5"></textarea>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="AccessLevel"></label>
            <select asp-for="AccessLevel" class="form-control">
                <option value="0">Public</option>
                <option value="1">Authorized</option>
                <option value="2">Subscriber</option>
            </select>
            <span asp-validation-for="AccessLevel" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ImageUrl"></label>
            <input asp-for="ImageUrl" class="form-control" />
            <span asp-validation-for="ImageUrl" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-action="ManageNews" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}